import streamlit as st
import yfinance as yf
import pandas as pd
import ta
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split

# ЁЯз╛ Streamlit UI
st.title("ЁЯУИ Swing Trading AI Tool")
stock = st.text_input("ЁЯУМ рк╢рлЗрк░ Symbol рк▓ркЦрлЛ (ркЬрлЗрко ркХрлЗ TCS.NS)", "TCS.NS")

# ЁЯУе ркбрлЗркЯрк╛ рк▓рлЛркб ркХрк░рлЛ
if stock:
    df = yf.download(stock, period="6mo", interval="1d")
    st.write("ЁЯУК ркЫрлЗрк▓рлНрк▓рк╛ркВ 6 ркорк╣рк┐ркирк╛ ркирк╛ ркбрлЗркЯрк╛:", df.tail())

    # ЁЯФз ркЯрлЗркХрлНркирк┐ркХрк▓ ркИркирлНркбрк┐ркХрлЗркЯрк░рлНрк╕ ркЙркорлЗрк░рлЛ
    df["EMA_10"] = ta.trend.ema_indicator(df["Close"], window=10)
    df["RSI"] = ta.momentum.RSIIndicator(df["Close"]).rsi()
    df["Target"] = df["Close"].shift(-2) > df["Close"]  # 2 ркжрк┐рк╡рк╕ рккркЫрлА ркнрк╛рк╡ рк╡ркзрлА рк╢ркХрлЗ?

    # ЁЯУШ ркХрк╛ркЪрк╛ркВ рклрлАркЪрк░рлНрк╕
    features = df[["Close", "EMA_10", "RSI"]].dropna()
    labels = df["Target"].dropna().astype(int)
    features = features.loc[labels.index]

    # ЁЯдЦ Model Train ркХрк░рлЛ
    X_train, X_test, y_train, y_test = train_test_split(features, labels, test_size=0.2)
    model = RandomForestClassifier()
    model.fit(X_train, y_train)

    # ЁЯУИ ркЕркВркдрк┐рко ркжрк┐рк╡рк╕ ркорк╛ркЯрлЗ рккрлВрк░рлНрк╡рк╛ркирлБркорк╛рки
    last_data = features.tail(1)
    prediction = model.predict(last_data)[0]

    # ЁЯУЛ рккрк░рк┐ркгрк╛рко
    st.subheader("ЁЯУЙ AI рккрлВрк░рлНрк╡рк╛ркирлБркорк╛рки:")
    if prediction:
        st.success("тЬЕ ркЖ рк╢рлЗрк░ркорк╛ркВ ркЖрк╡ркирк╛рк░рк╛ 2 ркжрк┐рк╡рк╕ркорк╛ркВ ркнрк╛рк╡ рк╡ркзрлА рк╢ркХрлЗ ркЫрлЗ.")
    else:
        st.error("тЭМ ркЖ рк╢рлЗрк░ркорк╛ркВ ркнрк╛рк╡ ркШркЯрлА рк╢ркХрлЗ ркЫрлЗ.")

    # ЁЯУК ркЪрк╛рк░рлНркЯ ркмркдрк╛рк╡рлЛ
    st.line_chart(df[["Close", "EMA_10"]].dropna())